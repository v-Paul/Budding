<Window x:Class="Bitcoiner.CSConinerMainUI"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Bitcoiner"
        WindowStyle="None"
        AllowsTransparency="True"
        Loaded="Window_Loaded"
        WindowStartupLocation="CenterScreen"
        Closing="Window_Closing"
        mc:Ignorable="d"
        Icon="Resources/CSharpCoin.png"
        FontFamily="Microsoft YaHei"
        Title="CSConinerMainUI" Height="550" Width="760">
    <Window.Resources>
        <ControlTemplate x:Key="ScrollViewerControlTemplate1" TargetType="{x:Type ScrollViewer}">
            <Grid x:Name="Grid" Background="{TemplateBinding Background}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <ScrollContentPresenter x:Name="PART_ScrollContentPresenter" CanContentScroll="{TemplateBinding CanContentScroll}" CanHorizontallyScroll="False" CanVerticallyScroll="False" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Grid.Column="0" Margin="{TemplateBinding Padding}" />
                <ScrollBar x:Name="PART_VerticalScrollBar" AutomationProperties.AutomationId="VerticalScrollBar" Cursor="Arrow" Grid.Column="1" Maximum="{TemplateBinding ScrollableHeight}" Minimum="0"  Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportHeight}" Style="{DynamicResource ScrollBarStyle1}"/>
            </Grid>
        </ControlTemplate>
        <LinearGradientBrush x:Key="VerticalScrollBarBackground" EndPoint="1,0" StartPoint="0,0">
            <GradientStop Color="#E1E1E1" Offset="0"/>
            <GradientStop Color="#EDEDED" Offset="0.20"/>
            <GradientStop Color="#EDEDED" Offset="0.80"/>
            <GradientStop Color="#E3E3E3" Offset="1"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="ScrollBarDisabledBackground" Color="#F4F4F4"/>
        <Style x:Key="ScrollBarButton" TargetType="{x:Type RepeatButton}">
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Background" Value="Black"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <!--<Microsoft_Windows_Themes:ScrollChrome x:Name="Chrome" RenderMouseOver="{TemplateBinding IsMouseOver}" RenderPressed="{TemplateBinding IsPressed}" SnapsToDevicePixels="true" Microsoft_Windows_Themes:ScrollChrome.ScrollGlyph="{TemplateBinding Microsoft_Windows_Themes:ScrollChrome.ScrollGlyph}"/>-->
                        <!--<Rectangle Fill="{TemplateBinding Background}" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}"/>-->
                        <StackPanel x:Name="spRect" Background="{TemplateBinding Background}" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}">
                            <TextBlock  x:Name="tbRect" Text="{TemplateBinding Tag}" HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="12"/>
                        </StackPanel>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" TargetName="spRect" Value="White"/>
                                <Setter Property="Foreground" TargetName="tbRect" Value="black"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="VerticalScrollBarPageButton" TargetType="{x:Type RepeatButton}">
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Rectangle Fill="{TemplateBinding Background}" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ScrollBarThumb" TargetType="{x:Type Thumb}">
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Border x:Name="border" Background="Black" BorderBrush="#666666" BorderThickness="1" >
                            <!--<Image x:Name="image" Source="Images/bar_center.png" VerticalAlignment="Center"></Image>-->
                            <TextBlock VerticalAlignment="Center" Text=""/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDragging" Value="True">
                                <Setter Property="Background" TargetName="border" Value="#7F7F7F"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <LinearGradientBrush x:Key="HorizontalScrollBarBackground" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#E1E1E1" Offset="0"/>
            <GradientStop Color="#EDEDED" Offset="0.20"/>
            <GradientStop Color="#EDEDED" Offset="0.80"/>
            <GradientStop Color="#E3E3E3" Offset="1"/>
        </LinearGradientBrush>
        <Style x:Key="HorizontalScrollBarPageButton" TargetType="{x:Type RepeatButton}">
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Rectangle Fill="{TemplateBinding Background}" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ScrollBarStyle1" TargetType="{x:Type ScrollBar}">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Stylus.IsPressAndHoldEnabled" Value="false"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="false"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="Width" Value="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"/>
            <Setter Property="MinWidth" Value="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ScrollBar}">
                        <Grid x:Name="Bg" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <Grid.RowDefinitions>
                                <RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}"/>
                                <RowDefinition Height="0.00001*"/>
                                <RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}"/>
                            </Grid.RowDefinitions>
                            <RepeatButton x:Name="UpButton" Foreground="#fab915" Tag="▲" Style="{StaticResource ScrollBarButton}" Command="{x:Static ScrollBar.LineUpCommand}" IsEnabled="{TemplateBinding IsMouseOver}"   >
                                <!--<RepeatButton.Content>
                                    -->
                                <!--<Image x:Name="imgUp" Source="BarUp.png" ></Image>-->
                                <!--
                                    <TextBlock VerticalAlignment="Center" Text="▲">
                                    </TextBlock>
                                </RepeatButton.Content>-->
                            </RepeatButton>
                            <Track x:Name="PART_Track" IsDirectionReversed="true" IsEnabled="{TemplateBinding IsMouseOver}" Grid.Row="1">
                                <Track.DecreaseRepeatButton>
                                    <RepeatButton Command="{x:Static ScrollBar.PageUpCommand}" Style="{StaticResource VerticalScrollBarPageButton}"/>
                                </Track.DecreaseRepeatButton>
                                <Track.IncreaseRepeatButton>
                                    <RepeatButton Command="{x:Static ScrollBar.PageDownCommand}" Style="{StaticResource VerticalScrollBarPageButton}"/>
                                </Track.IncreaseRepeatButton>
                                <Track.Thumb>
                                    <Thumb Style="{StaticResource ScrollBarThumb}"/>
                                </Track.Thumb>
                            </Track>
                            <RepeatButton Style="{StaticResource ScrollBarButton}" Foreground="#fab915" Tag="▼" Command="{x:Static ScrollBar.LineDownCommand}" IsEnabled="{TemplateBinding IsMouseOver}" Grid.Row="2" >
                                <!--<RepeatButton.Content>
                                    -->
                                <!--<Image x:Name="imgDown" Source="Images/BarDown.png"></Image>-->
                                <!--
                                    <TextBlock VerticalAlignment="Center" Text="V"/>
                                </RepeatButton.Content>-->
                            </RepeatButton>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <!--<Trigger Property="IsEnabled" SourceName="UpButton" Value="True">
                                <Setter Property="Source" TargetName="imgUp" Value="Images/BarUp_S.png"/>
                                <Setter Property="Source" TargetName="imgDown" Value="Images/BarDown_S.png"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="Bg" Value="{StaticResource ScrollBarDisabledBackground}"/>
                            </Trigger>-->
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="Orientation" Value="Horizontal">
                    <Setter Property="Width" Value="Auto"/>
                    <Setter Property="MinWidth" Value="0"/>
                    <Setter Property="Height" Value="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}"/>
                    <Setter Property="MinHeight" Value="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}"/>
                    <Setter Property="Background" Value="{StaticResource HorizontalScrollBarBackground}"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ScrollBar}">
                                <Grid x:Name="Bg" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition MaxWidth="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}"/>
                                        <ColumnDefinition Width="0.00001*"/>
                                        <ColumnDefinition MaxWidth="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}"/>
                                    </Grid.ColumnDefinitions>
                                    <RepeatButton Command="{x:Static ScrollBar.LineLeftCommand}" IsEnabled="{TemplateBinding IsMouseOver}" Style="{StaticResource ScrollBarButton}" />
                                    <Track x:Name="PART_Track" Grid.Column="1" IsEnabled="{TemplateBinding IsMouseOver}">
                                        <Track.DecreaseRepeatButton>
                                            <RepeatButton Command="{x:Static ScrollBar.PageLeftCommand}" Style="{StaticResource HorizontalScrollBarPageButton}"/>
                                        </Track.DecreaseRepeatButton>
                                        <Track.IncreaseRepeatButton>
                                            <RepeatButton Command="{x:Static ScrollBar.PageRightCommand}" Style="{StaticResource HorizontalScrollBarPageButton}"/>
                                        </Track.IncreaseRepeatButton>
                                        <Track.Thumb>
                                            <Thumb Style="{StaticResource ScrollBarThumb}" />
                                        </Track.Thumb>
                                    </Track>
                                    <RepeatButton Grid.Column="2" Command="{x:Static ScrollBar.LineRightCommand}" IsEnabled="{TemplateBinding IsMouseOver}" Style="{StaticResource ScrollBarButton}" />
                                </Grid>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsEnabled" Value="false">
                                        <Setter Property="Background" TargetName="Bg" Value="{StaticResource ScrollBarDisabledBackground}"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </Style.Triggers>
        </Style>

        <ControlTemplate x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
            <Grid Height="25">
                <Border Grid.Column="1" Background="White" Opacity="0"   Cursor="Hand"/>
                <Path x:Name="Arrow" Grid.Column="1" Margin="5,0"  Data="M 0 0  6 6 12 0 Z"  VerticalAlignment="Center" HorizontalAlignment="Right" Stretch="None" Fill="#fab915" />
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="IsChecked" Value="true">
                    <Setter TargetName="Arrow" Property="RenderTransform">
                        <Setter.Value>
                            <RotateTransform   CenterX="6" CenterY="3" Angle="180"></RotateTransform>
                        </Setter.Value>
                    </Setter>
                    <Setter TargetName="Arrow" Property="Margin" Value="0 0 0 2"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <!--ComboBox-->
        <!--ComBoBox项选中背景色-->
        <SolidColorBrush x:Key="ComboBoxSelectdBackground" Color="White"/>
        <!--ComBoBox项鼠标经过背景色-->
        <SolidColorBrush x:Key="ComboBoxMouseOverBackground" Color="White"/>
        <!--ComBoBox项选中前景色-->
        <SolidColorBrush x:Key="ComboBoxSelectedForeground" Color="#fab915"/>
        <!--ComBoBox项鼠标经过前景色-->
        <SolidColorBrush x:Key="ComboBoxMouseOverForegrond" Color="Black"/>
        <Style x:Key="btCmb" TargetType="{x:Type ComboBox}">
            <Setter Property="ItemContainerStyle">
                <Setter.Value>
                    <Style TargetType="ComboBoxItem">
                        <Setter Property="Height" Value="40"/>
                        <Setter Property="Background" Value="Black"/>
                        <Setter Property="Foreground" Value="#fab915"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate  TargetType="{x:Type ComboBoxItem}">
                                    <Grid Height="{TemplateBinding Height}" Width="{TemplateBinding Width}">
                                        <Border x:Name="_borderbg" Background="{TemplateBinding Background}" BorderBrush="#fab915" BorderThickness="1"/>
                                        <TextBlock Margin="5,0" VerticalAlignment="Center" x:Name="_txt" Foreground="#fab915" Text="{Binding Content,RelativeSource={RelativeSource TemplatedParent}}"/>
                                        <Border x:Name="_border" Background="White" Opacity="0"/>
                                    </Grid>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsSelected" Value="true">
                                            <Setter TargetName="_borderbg" Property="Background" Value="{StaticResource ComboBoxSelectdBackground}" />
                                            <Setter TargetName="_txt" Property="Foreground" Value="{StaticResource ComboBoxSelectedForeground}"/>
                                        </Trigger>
                                        <MultiTrigger>
                                            <MultiTrigger.Conditions>
                                                <Condition Property="IsSelected" Value="false"/>
                                                <Condition Property="IsMouseOver" Value="true"/>
                                            </MultiTrigger.Conditions>
                                            <Setter TargetName="_borderbg" Property="Background" Value="{StaticResource ComboBoxMouseOverBackground}" />
                                            <Setter TargetName="_txt" Property="Foreground" Value="{StaticResource ComboBoxMouseOverForegrond}"/>
                                        </MultiTrigger>

                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </Setter.Value>
            </Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ComboBox}">
                        <Grid>

                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="0.7*"/>
                                <ColumnDefinition Width="0.3*" MaxWidth="30"/>
                            </Grid.ColumnDefinitions>
                            <Border  Grid.Column="0" Grid.ColumnSpan="2" BorderThickness="0" Background="black" BorderBrush="#a29c9e" CornerRadius="5"/>
                            <ContentPresenter  Margin="5,0" HorizontalAlignment="Left" x:Name="ContentSite" VerticalAlignment="Center" Content="{TemplateBinding SelectionBoxItem}" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" IsHitTestVisible="False"/>

                            <!--ToggleButton 已数据绑定到 ComboBox 本身以切换 IsDropDownOpen-->
                            <ToggleButton Grid.Column="0"  Grid.ColumnSpan="2"  Template="{StaticResource ComboBoxToggleButton}" x:Name="ToggleButton" Focusable="false" IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" ClickMode="Press"/>
                            <!--必须将 TextBox 命名为 PART_EditableTextBox，否则 ComboBox 将无法识别它-->
                            <TextBox  Visibility="Collapsed" BorderThickness="0"   Margin="2 0 0 0" x:Name="PART_EditableTextBox"  VerticalAlignment="Center" Focusable="True" Background="Transparent" IsReadOnly="{TemplateBinding IsReadOnly}"/>

                            <!--Popup 可显示 ComboBox 中的项列表。IsOpen 已数据绑定到通过 ComboBoxToggleButton 来切换的 IsDropDownOpen-->
                            <Popup IsOpen="{TemplateBinding IsDropDownOpen}" Placement="Bottom" x:Name="Popup" Focusable="False"  AllowsTransparency="True" PopupAnimation="Slide">
                                <Grid MaxHeight="150" MinWidth="{TemplateBinding ActualWidth}" x:Name="DropDown" SnapsToDevicePixels="True">
                                    <Border x:Name="DropDownBorder"  BorderBrush="#e8e8e8" BorderThickness="0"/>
                                    <ScrollViewer Margin="1" Template="{StaticResource ScrollViewerControlTemplate1}" SnapsToDevicePixels="True" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto" CanContentScroll="True">
                                        <!--StackPanel 用于显示子级，方法是将 IsItemsHost 设置为 True-->
                                        <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" Background="Black" Height="120"/>
                                    </ScrollViewer>
                                </Grid>
                            </Popup>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEditable" Value="true">
                                <Setter TargetName="PART_EditableTextBox" Property="Visibility" Value="Visible" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="BtnInfoStyle" TargetType="Button">
            <!--<Setter Property="Width" Value="70"/>
            <Setter Property="Height" Value="25"/>-->
            <Setter Property="Foreground" Value="#fab915"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Cursor" Value="Hand"/>
            <!--<Setter Property="Background" Value="#5EB26C"/>-->
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True" CornerRadius="5">
                            <TextBlock x:Name="txtinput" Margin="{TemplateBinding Padding}" Text="{TemplateBinding Content}" Foreground="{TemplateBinding Foreground}" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="Background" Value="White"/>
                                <Setter TargetName="txtinput" Property="TextBlock.Foreground" Value="Black"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="border" Property="Background" Value="#2a89a4"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="BtnCloseStyle" TargetType="Button">
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True">
                            <TextBlock x:Name="txtinput" Margin="{TemplateBinding Padding}" Text="{TemplateBinding Content}" Foreground="{TemplateBinding Foreground}" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="Background" Value="Red"/>
                                <Setter TargetName="txtinput" Property="TextBlock.Foreground" Value="White"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="BtnMinStyle" TargetType="Button">
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True">
                            <TextBlock x:Name="txtinput" Margin="{TemplateBinding Padding}" Text="{TemplateBinding Content}" Foreground="{TemplateBinding Foreground}" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="Background" Value="White"/>
                                <Setter TargetName="txtinput" Property="TextBlock.Foreground" Value="#fab915"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="TextBoxStyle" TargetType="{x:Type TextBox}">
            <!--<Setter Property="Background" Value="#FFFCF5"/>-->
            <Setter Property="Background" Value="#40000000"/>
            <Setter Property="BorderBrush" Value="#a29c9e"/>
            <Setter Property="Foreground" Value="#fab915"/>
            <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="AllowDrop" Value="true"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <Border x:Name="BackBorder" SnapsToDevicePixels="true" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="5"  Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}">
                            <ScrollViewer x:Name="PART_ContentHost" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="BackBorder" Value="#70000000"/>
                                <Setter Property="Foreground" Value="#fab915"/>
                            </Trigger>
                            <!--   <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" TargetName="BackBorder" Value="#30FFFFFF"/>
                                <Setter Property="BorderBrush" TargetName="BackBorder" Value="#30FFFFFF"/>
                            </Trigger>
                            <Trigger Property="IsFocused" Value="True">
                                <Setter Property="Background" TargetName="BackBorder" Value="#30000000"/>
                                <Setter Property="BorderBrush" TargetName="BackBorder" Value="#50FFFFFF"/>
                            </Trigger>
                   -->
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="textblockStyle" TargetType="{x:Type TextBlock}">
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="HorizontalAlignment" Value="Center" />
            <Setter Property="Padding" Value="15,8" />
            <Setter Property="FontSize" Value="16" />
        </Style>

        <Style TargetType="{x:Type GridViewColumnHeader}">
            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="Foreground" Value="#fab915"/>
            <Setter Property="Background" Value="black" />
            <Setter Property="FontSize" Value="14" />
            <Setter Property="Height" Value="25" />
            <Setter Property="Width" Value="{Binding}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="GridViewColumnHeader">
                        <Grid Background="{TemplateBinding Background}">
                            <Border Name="HeaderBorder">
                                <ContentPresenter x:Name="HeaderContent" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                VerticalAlignment="Center"
                                Margin="10,0,0,0" RecognizesAccessKey="True"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                ContentTemplate="{TemplateBinding ContentTemplate}">
                                </ContentPresenter>
                            </Border>
                            <Thumb x:Name="PART_HeaderGripper" Width="1" BorderBrush="#fab915" BorderThickness="0"  HorizontalAlignment="Right"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

    </Window.Resources>
    <!--
    <Grid Background="#f4f3ef">
        <Grid.RowDefinitions>
            <RowDefinition Height="50"/>
            <RowDefinition/>
            <RowDefinition/>
            <RowDefinition/>
        </Grid.RowDefinitions>
        <StackPanel x:Name="spTtile" MouseDown="spTtile_MouseDown" Background="Red">
            <StackPanel Orientation="Horizontal"  HorizontalAlignment="Right" Margin="0" >
                <Button Width="25" Height="25" Margin="2" Style="{StaticResource BtnInfoStyle}" Background="#e2c593" Content="?" />
                <Button Width="25" Height="25" Margin="2" Style="{StaticResource BtnInfoStyle}" Content ="__" />
                <Button Width="25" Height="25" Margin="2" Style="{StaticResource BtnInfoStyle}" Content ="X" Click="Button_Click"/>
            </StackPanel>
        </StackPanel>
        <Border Width="720" Grid.Row="1" Margin="10,20,10,0" CornerRadius="5" Background="#FFFFFF">
            <Grid Width="700" Margin="10" Background="Transparent">
                <Grid.RowDefinitions>
                    <RowDefinition/>
                    <RowDefinition/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                    <ColumnDefinition />
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>
                    <TextBox Background="#F9FAF9" BorderThickness="0" VerticalContentAlignment="Center" Height="25" Foreground="Black" FontWeight="SemiBold">KeyPairs</TextBox>
                    <ComboBox Grid.Column="1" Height="40" Margin="5,0" Style="{StaticResource btCmb}">
                        <ComboBoxItem>12</ComboBoxItem>
                        <ComboBoxItem>13</ComboBoxItem>
                        <ComboBoxItem>14</ComboBoxItem>
                    </ComboBox>
                </Grid>
                <TextBox Style="{StaticResource TextBoxStyle}" Grid.Column="1" Height="40" ></TextBox>
                <Button Grid.Column="2" FontSize="14" Width="120" Margin="5,0" Height="40" Style="{StaticResource BtnInfoStyle}">GenerateKeypair</Button>
                <TextBox Style="{StaticResource TextBoxStyle}" Grid.Row="1" Grid.ColumnSpan="2" Height="40" Background="#FFFCF5" ></TextBox>
            </Grid>
        </Border>
        <Border Margin="10,20,10,0"  Grid.Row="2" Width="720" CornerRadius="5" Background="#FFFFFF">
            <Grid Width="400" Margin="10" Background="White" Grid.Row="1">
                <Grid.RowDefinitions>
                    <RowDefinition/>
                    <RowDefinition/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                    <ColumnDefinition/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>
            </Grid>
        </Border>
        <Border Margin="10,20,10,20" Grid.Row="3" Width="720" CornerRadius="5" Background="#FFFFFF">
            <Grid Width="400" Margin="10" Background="White" Grid.Row="2">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                    <ColumnDefinition/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>
            </Grid>
        </Border>
    </Grid>Background="#f4f3ef"#fab915
    fab915
    -->
    <Border BorderBrush="#fab915" BorderThickness="1">
        <Grid>
            <Grid.Background>
                <ImageBrush ImageSource="Resources/bgImg2.jpg"/>
            </Grid.Background>
            <Grid.RowDefinitions>
                <RowDefinition Height="50"/>
                <RowDefinition/>
            </Grid.RowDefinitions>
            <StackPanel x:Name="spTtile" MouseDown="spTtile_MouseDown"  Background="#fab915">
                <Grid Height="50">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>
                    <StackPanel VerticalAlignment="Center" Orientation="Horizontal">
                        <TextBlock VerticalAlignment="Center" Margin="5" Background="Black" Padding="10,3" Foreground="#fab915" FontSize="20">西夏普</TextBlock>
                        <!--<Border CornerRadius="35" BorderBrush="White" BorderThickness="2">
                            <TextBlock VerticalAlignment="Center" Width="35"  Background="Black" Foreground="#fab915" Height="35" Padding="5,1,0,0" HorizontalAlignment="Center" FontSize="24">普</TextBlock>
                        </Border>-->
                        <Border BorderBrush="Black" BorderThickness="1" Margin="0,5,5,5">
                            <TextBlock VerticalAlignment="Center" Padding="2" Foreground="black" FontSize="20">山寨币</TextBlock>
                        </Border>
                    </StackPanel>
                    <StackPanel Height="30" Grid.Column="1" Orientation="Horizontal" VerticalAlignment="Top" HorizontalAlignment="Right">
                        <Button Width="30" Height="30" Margin="0" Style="{StaticResource BtnMinStyle}" Background="#fab915" Content="?" Foreground="White" />
                        <Button Width="30" Height="30" Margin="2,0,0,0" Style="{StaticResource BtnMinStyle}" Background="#fab915" Content ="__" Foreground="White" x:Name="btnMin" Click="btnMin_Click"/>
                        <Button Width="30" Height="30" Margin="2,0,0,0" Style="{StaticResource BtnCloseStyle}" Background="#fab915" Content ="X" Click="Button_Click"/>
                    </StackPanel>
                </Grid>
            </StackPanel>
            <TabControl Grid.Row="1" Background="{Binding}">
                <TabItem Header="T1" Height="23" VerticalAlignment="Top">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="100"/>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>

                        <Border BorderBrush="LightGray" BorderThickness="0">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition/>
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="39"/>
                                    <ColumnDefinition Width="111"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto" MinWidth="60"/>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>
                                <Image Source="Resources/KeyImg-gold.png"  Margin="20,15,0,5" Height="80" Width="80" HorizontalAlignment="Left" Grid.ColumnSpan="2"/>
                                <Button Name="btnCreateKey" Grid.Column="2" Style="{StaticResource BtnInfoStyle}" Width="120" Height="40"  Content="CreateKey" FontSize="16" Background="black" Click="btnCreatekey_Click" Margin="0,30" />
                                <!--<Button Grid.Column="2" Style="{StaticResource BtnInfoStyle}" Height="40" Content="50000" Padding="5"  Background="#fab915" FontSize="16"  Margin="50,0,0,0"/>-->
                                <Border Grid.Column="3" Padding="0" Margin="50,30,0,30"  HorizontalAlignment="Left" VerticalAlignment="Center" BorderBrush="#fab915" BorderThickness="1">
                                    <TextBlock Margin="0" x:Name ="txtKeyCount" Style="{StaticResource textblockStyle}" Text="0" FontSize="16" Background="Transparent" Foreground="#fab915">
                                        <TextBlock.ToolTip>
                                            <TextBlock Background="WhiteSmoke" Foreground="Black" Text="Number of keys."/>
                                        </TextBlock.ToolTip>
                        </TextBlock>
                                </Border>
                                <Image Grid.Column="4" Source="pack://siteoforigin:,,,/Resources/KeyIcon.png" Height="25" HorizontalAlignment="Left" Margin="5,38,0,38"/>
                            </Grid>
                        </Border>
                        <Border  Grid.Row="1" BorderBrush="LightGray" BorderThickness="0,1">
                            <Grid Margin="0,0,10,0">
                                <Grid.RowDefinitions>
                                    <RowDefinition/>
                                    <RowDefinition/>
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" MinWidth="150"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>
                                <Image Grid.RowSpan="2" Source="Resources/dig-gold.png" Margin="20,15" Height="80" Width="80" HorizontalAlignment="Left"/>
                                <Button x:Name="btnCreateBlock" Grid.Column="1" Grid.ColumnSpan="2" HorizontalAlignment="Left" Style="{StaticResource BtnInfoStyle}" Width="120" Height="40"  Content="CreateBlock" FontSize="16" Background="Black" Click="btnCreateBlock_Click"/>
                                <!--<Button Grid.Column="1" Grid.Row="1" Style="{StaticResource BtnInfoStyle}" Margin="5,0" Height="40" Padding="5" Content="12228" FontSize="16" Background="#fab915"/>-->
                                <Border Margin="9" Grid.Column="1" Grid.Row="1" HorizontalAlignment="Left" VerticalAlignment="Center" BorderBrush="#fab915" BorderThickness="1">
                                    <TextBlock x:Name="txtLastBlockheight" Style="{StaticResource textblockStyle}" Text="0" FontSize="16" Background="Transparent" Foreground="#fab915">
                                        <TextBlock.ToolTip>
                                            <TextBlock Background="WhiteSmoke" Foreground="Black" Text="Last Block Height"/>
                                        </TextBlock.ToolTip>
                        </TextBlock>
                                </Border>
                                <!--<Button Grid.Column="2" Grid.Row="1" Style="{StaticResource BtnInfoStyle}" Height="40"  Content="128" Padding="5" FontSize="16" Background="#fab915"/>-->
                                <Border Margin="9" Padding="0" Grid.Column="2" Grid.Row="1" HorizontalAlignment="Left" VerticalAlignment="Center" BorderBrush="#fab915" BorderThickness="1">
                                    <TextBlock Margin="0" x:Name="txtTxUncomitCount" Style="{StaticResource textblockStyle}" Text="0" FontSize="16" Background="Transparent" Foreground="#fab915">
                                        <TextBlock.ToolTip>
                                            <TextBlock Background="WhiteSmoke" Foreground="Black" Text="Uncommitted Tx Count"/>
                                        </TextBlock.ToolTip>
                        </TextBlock>
                                </Border>
                                <TextBlock Foreground="White" Grid.Column="3" Text="Puzzle:" VerticalAlignment="Center" FontSize="14" FontWeight="SemiBold" Margin="10" />
                                <TextBox x:Name="txtLastPuzzle" Grid.Column="4" Grid.Row="0" Style="{StaticResource TextBoxStyle}" Height="40" Margin="5,0" IsReadOnly="True"/>
                                <TextBlock Foreground="White" Grid.Column="3" Grid.Row="1" Text="Express:" VerticalAlignment="Center" FontSize="14" FontWeight="SemiBold" Margin="10" />
                                <TextBox x:Name="txtPuzzleExpress" Grid.Column="4" Grid.Row="1" Style="{StaticResource TextBoxStyle}" Height="40" Margin="5,0">
                                    <TextBox.ToolTip>
                                        <TextBlock x:Name="txtExpress" Background="WhiteSmoke" Foreground="Black"/>
                                    </TextBox.ToolTip>
                                </TextBox>
                            </Grid>
                        </Border>
                        <Border  Grid.Row="2" BorderBrush="LightGray" BorderThickness="0">
                            <Grid  Margin="0,10">
                                <Grid.RowDefinitions>
                                    <RowDefinition/>
                                    <RowDefinition/>
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" MinWidth="150"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto" MinWidth="60" />
                                    <ColumnDefinition MinWidth="100"/>
                                </Grid.ColumnDefinitions>
                                <Image Grid.RowSpan="2" Source="Resources/CoinImg-gold.png" Margin="20,0,0,0" Height="80" Width="80" HorizontalAlignment="Left"/>
                                <ComboBox x:Name="cmbKeyList" Grid.Column="1" Grid.ColumnSpan="2" Style="{StaticResource btCmb}" Width="120" Height="40" FontSize="16" Foreground="#fab915" SelectionChanged="cmbKeyList_SelectionChanged" >
                                    <ComboBoxItem>keyName1</ComboBoxItem>
                                    <ComboBoxItem>keyName2</ComboBoxItem>
                                    <ComboBoxItem>keyName3</ComboBoxItem>
                                </ComboBox>
                                <TextBlock Grid.Column="1" Grid.Row="1" Text="Nodes:" VerticalAlignment="Center" FontSize="14" FontWeight="SemiBold" Margin="5" Foreground="White" />
                                <!--<Button Grid.Column="2" Grid.Row="1" Style="{StaticResource BtnInfoStyle}" Height="40"  Content="128" Padding="5" FontSize="16" Background="#66615b"/>-->
                                <Border Margin="9" Padding="0" Grid.Column="2" Grid.Row="1" HorizontalAlignment="Left" VerticalAlignment="Center" BorderBrush="#fab915" BorderThickness="1">
                                    <TextBlock x:Name="txtConectNodes" Style="{StaticResource textblockStyle}" Text="0" FontSize="16"  Background="Transparent" Foreground="#fab915">
                                        <TextBlock.ToolTip>
                                            <TextBlock Background="WhiteSmoke" Foreground="Black" Text="Connected nodes count"/>
                                        </TextBlock.ToolTip>
                        </TextBlock>
                                </Border>
                                <!--<DockPanel  Grid.Row="0"  Grid.Column="3" Grid.ColumnSpan="2" HorizontalAlignment="Left" >
                        <TextBlock Text="Blance:" VerticalAlignment="Center" FontSize="14" FontWeight="SemiBold" Margin="16" />
                        <TextBox x:Name="txtComitBalance" Style="{StaticResource TextBoxStyle}" Height="40" Width="100" Margin="0" IsEnabled="False" Text="111" FontSize="16"/>
                    </DockPanel>-->
                                <TextBlock Foreground="White" Text="Blance:" Grid.Row="0" Grid.Column="3"  VerticalAlignment="Center" FontSize="14" FontWeight="SemiBold" Margin="12" />
                                <StackPanel  Grid.Row="0"  Grid.Column="4" Orientation="Horizontal" >
                                    <TextBox x:Name="txtComitBalance" Style="{StaticResource TextBoxStyle}" Height="40" Width="Auto" MinWidth="60" HorizontalContentAlignment="Right" HorizontalAlignment="Left"  IsEnabled="False" Text="0.00" FontSize="16"/>
                                    <TextBox Style="{StaticResource TextBoxStyle}" Height="40" Width="20" HorizontalAlignment="Left" IsEnabled="False" Text="$" FontSize="16"/>
                                </StackPanel>
                                <TextBlock Foreground="White" Grid.Column="3" Grid.Row="1" Text="Un-Blance:" VerticalAlignment="Center" FontSize="14" FontWeight="SemiBold" Margin="12,0,5,0"/>
                                <StackPanel  Grid.Column="4" Grid.Row="1" Orientation="Horizontal" >
                                    <TextBox x:Name="txtUnComitBalance"  Style="{StaticResource TextBoxStyle}" Height="40" Width="Auto" MinWidth="60" HorizontalContentAlignment="Right" HorizontalAlignment="Left"  IsEnabled="False" Text="0.00"  FontSize="16"/>
                                    <TextBox Style="{StaticResource TextBoxStyle}" Height="40" Width="20" HorizontalAlignment="Left" IsEnabled="False" Text="$" FontSize="16"/>
                                </StackPanel>
                                <TextBox x:Name="txtKeyHash" Grid.Column="5" Grid.Row="0" Grid.RowSpan="2" Style="{StaticResource TextBoxStyle}" VerticalAlignment="Stretch" VerticalContentAlignment="Top" TextWrapping="Wrap" Margin="5,5,10,5" Text="" FontSize="16">
                                    <TextBox.ToolTip>
                                        <TextBlock Background="WhiteSmoke" Foreground="Black" Text="Selected key's hash"/>
                                    </TextBox.ToolTip>
                                </TextBox>
                            </Grid>
                        </Border>
                        <Border  Grid.Row="3" BorderBrush="LightGray" BorderThickness="0,1,0,0">
                            <Grid Margin="0,10">
                                <Grid.RowDefinitions>
                                    <RowDefinition/>
                                    <RowDefinition/>
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" MinWidth="150"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition />
                                </Grid.ColumnDefinitions>
                                <Image Grid.RowSpan="2" Source="Resources/transferImg-gold.png" Margin="20,15" Height="75" Width="75" HorizontalAlignment="Left"/>
                                <Button x:Name="btnTransfer" Grid.Column="1" Grid.ColumnSpan="2" HorizontalAlignment="Left" Style="{StaticResource BtnInfoStyle}" Width="120" Height="40"  Content="Transfer" FontSize="16" Background="Black" Click="btnTransfer_Click"/>
                                <TextBlock Foreground="White" Grid.Column="3" Text="Amount:" VerticalAlignment="Center" FontSize="14" FontWeight="SemiBold" Margin="12" />
                                <TextBox x:Name="txtAmount" Grid.Column="4" Grid.Row="0" Style="{StaticResource TextBoxStyle}" Height="40" Margin="5,0"/>
                                <TextBlock Foreground="White" Grid.Column="3" Grid.Row="1" Text="Account:" VerticalAlignment="Center" FontSize="14" FontWeight="SemiBold" Margin="12" />
                                <TextBox x:Name="txtAcount" Grid.Column="4" Grid.Row="1" Style="{StaticResource TextBoxStyle}" Height="40" Margin="5,0"/>
                            </Grid>
                        </Border>

                        <Canvas Width="200" Height="200" Margin="60,-10,133,21" Grid.Row="1" Grid.RowSpan="2">
                            <Path Fill="Transparent" Stroke="Transparent" x:Name="path1" StrokeThickness="3" Canvas.Left="4" Canvas.Top="188">
                                <Path.Data>
                                    <PathGeometry>
                                        <PathFigure StartPoint="120,-20">
                                            <ArcSegment Point="150,10" Size="10,30" SweepDirection="Clockwise"
                                    RotationAngle="0"
                                    IsSmoothJoin="False" IsLargeArc="True"/>
                                        </PathFigure>
                                    </PathGeometry>
                                </Path.Data>
                            </Path>
                            <Border x:Name="border1" Visibility="Collapsed" Width="30" Height="30" CornerRadius="12.5" Canvas.Left="0" Canvas.Top="175" >
                                <!--<Image Source="pack://siteoforigin:,,,/Resources/goldcoin.png" Width="50" Height="50"/>-->
                                <!--<MediaElement Name="pan5A" Source="Resources/timg.gif" MediaEnded="MediaElement_MediaEnded" Width="30" Height="30" >

                    </MediaElement>-->
                                <Canvas Height="30" Width="20" VerticalAlignment="Bottom">
                                    <Border Height="30" Width="20" Background="#fab915" CornerRadius="5">

                                    </Border>
                                    <Border  CornerRadius="2.5" Canvas.Left="5" Canvas.Top="5">
                                        <TextBlock Text="$" Foreground="#1E2049" FontWeight="SemiBold" FontSize="16" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                                    </Border>
                                </Canvas>
                            </Border>
                        </Canvas>
                    </Grid>
                </TabItem>
                <TabItem Header="T3">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="50"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <TextBlock Text="Condition Position!" Foreground="white" FontSize="30"/>
                        <ListView Grid.Row="1" Background="Transparent" Foreground="#fab915" ItemsSource="{Binding MultiSignShows}" MinHeight="50" IsSynchronizedWithCurrentItem="True">
                            <ListView.View>
                                <GridView>
                                    <GridView.Columns>
                                        <GridViewColumn  Width="100">
                                            <GridViewColumn.Header >
                                                <CheckBox x:Name="btnCheckAll" Click="btnCheckAll_Click" Foreground="#fab915" >Check All</CheckBox>
                                            </GridViewColumn.Header>
                                            <GridViewColumn.CellTemplate>
                                                <DataTemplate>
                                                    <CheckBox Checked="CheckBox_Checked" IsChecked="{Binding Path=bIsAdd2PriTx}" Tag="{Binding Path=ID}"></CheckBox>
                                                </DataTemplate>
                                            </GridViewColumn.CellTemplate>
                                        </GridViewColumn>
                                        <GridViewColumn Header="TxHash" Width="100"  DisplayMemberBinding="{Binding TxHash}"/>
                                        <GridViewColumn Header="Output Index"  Width="150" DisplayMemberBinding="{Binding OutputIndex}"/>
                                        <GridViewColumn Header="Value"  Width="100" DisplayMemberBinding="{Binding Value}"/>
                                        <GridViewColumn Header="OutScriptPKHash list"  Width="150" DisplayMemberBinding="{Binding OutScriptPKHash}"/>
                                    </GridView.Columns>
                                </GridView>
                            </ListView.View>
                        </ListView>
                        <Grid Grid.Row="2">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition />
                            </Grid.ColumnDefinitions>
                            <Button Margin="5" Style="{StaticResource BtnInfoStyle}" HorizontalAlignment="Left"  Width="120" Height="40"  Content="CreatePriTx" FontSize="16" Background="black" Click="btnCreatePriTx_Click"/>
                            <Button Margin="5" Grid.Column="1" Style="{StaticResource BtnInfoStyle}" HorizontalAlignment="Left"  Width="120" Height="40"  Content="Sign" FontSize="16" Background="black" Click="btnSign_Click"/>
                            <Button Margin="5" Grid.Row="1" Style="{StaticResource BtnInfoStyle}" HorizontalAlignment="Left"  Width="120" Height="40"  Content="RequestSign" FontSize="16" Background="black" Click="btnRequestSign_Click"/>
                            <TextBox Style="{StaticResource TextBoxStyle}" x:Name="txtIpAddress" Height="40" Margin="5,0"  Grid.Row="1" Grid.Column="1"/>
                            <Button Margin="5" Grid.Row="2" Style="{StaticResource BtnInfoStyle}" HorizontalAlignment="Left"  Width="150" Height="40"  Content="CreateRedeemTx" FontSize="16" Background="black" Click="btnCreateRedeemTx_Click"/>
                            <TextBox  Style="{StaticResource TextBoxStyle}" x:Name="txtredeemPay2Hash" Height="40" Margin="5,0"  Grid.Row="2" Grid.Column="1"/>
                            <Grid Grid.Row="3" Grid.ColumnSpan="2" >
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition/>
                                </Grid.RowDefinitions>
                                <TextBlock HorizontalAlignment="Left" Style="{StaticResource textblockStyle}" Text="Tx json" FontSize="12" Padding="0" Background="Transparent" Foreground="#fab915"/>
                                <TextBox Grid.Row="1" Style="{StaticResource TextBoxStyle}"  x:Name="txtTxjson" Margin="5,0"  />
                            </Grid>
                        </Grid>
                    </Grid>
                </TabItem>
            </TabControl>
        </Grid>
    </Border>
</Window>
